{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyPWDfrCrj7DNWl2tc0sgFCG"
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "source": [
        "import math\n",
        "empresa = \"Fênix Engenharia e Serviços\"; ano = 2023; autores = \"Cleiton Borghi e Ariel Reises\"\n",
        "\n",
        "print(f\"Bem-vindo à {empresa}!\")\n",
        "print(f\"Esse é o nosso simulador de economia para sistemas fotovoltaicos.\\nPor: {autores}.\\n\")\n",
        "\n",
        "def calcular_valor_parcela(valor, num_parcelas, taxa_juros):\n",
        "    taxa_juros_decimal = taxa_juros / 100\n",
        "    valor_parcela = valor * (1 + taxa_juros_decimal) / num_parcelas\n",
        "    return valor_parcela\n",
        "\n",
        "# Entrada de dados do usuário\n",
        "try:\n",
        "    consumo_mensal = int(input(\"Digite o consumo mensal aproximado (em kW): \"))\n",
        "    custo_mensal = float(input(\"Digite o custo mensal aproximado: R$ \"))\n",
        "except ValueError:\n",
        "    print(\"Entrada inválida. Certifique-se de digitar um número válido.\")\n",
        "\n",
        "# Cálculo da média de valor por kW\n",
        "media_valor_por_kW = custo_mensal / consumo_mensal\n",
        "\n",
        "print(f\"\\nMédia de valor por kW: R$ {media_valor_por_kW:.2f}\")\n",
        "\n",
        "# Entrada de dados para dimensionamento do projeto\n",
        "try:\n",
        "    dimensionamento_projeto = float(input(\"\\nDigite o dimensionamento do projeto (em kW): \"))\n",
        "    valor_projeto = float(input(\"Digite o valor de custo estimado do projeto: R$ \"))\n",
        "except ValueError:\n",
        "    print(\"Entrada inválida. Certifique-se de digitar um número válido.\")\n",
        "\n",
        "# Avaliação do dimensionamento do projeto\n",
        "if dimensionamento_projeto > consumo_mensal:\n",
        "    print(\"\\nSeu projeto é maior que o consumo atual do cliente.\")\n",
        "    print(\"Isso gerará créditos com a companhia elétrica nos sistemas on-grid.\\n\")\n",
        "\n",
        "# Cálculo do valor atual do consumo mensal\n",
        "valor_atual_consumo_mensal = consumo_mensal * media_valor_por_kW\n",
        "\n",
        "# Previsão de tempo de retorno do investimento\n",
        "previsao_tempo_retorno = valor_projeto / valor_atual_consumo_mensal\n",
        "\n",
        "print(f\"\\nPrevisão de tempo de retorno do investimento: aproximadamente {math.ceil(previsao_tempo_retorno)} meses\\n\")\n",
        "\n",
        "# Taxas de juros\n",
        "print(\"=\" * 45)\n",
        "print(\"Taxas de juros para parcelamento:\")\n",
        "print(\"- até 24x: 1.45% ao mês\")\n",
        "print(\"- de 25x à 96x: 1.59% ao mês\")\n",
        "print(\"=\" * 45)\n",
        "# Condições de pagamento\n",
        "print(\"\\nCondições de pagamento:\")\n",
        "print(f\"- À vista: R$ {valor_projeto:.2f}\")\n",
        "print(f\"- Em até 10x sem juros de: R$ {(valor_projeto / 10):.2f}\")\n",
        "print(\"- Parcelamento: de 12x à 96x pelo Banco BTG\")\n",
        "print(\"=\" * 45)\n",
        "\n",
        "# Opção para pagamento à vista\n",
        "try:\n",
        "    opcao_pagamento = input(\"\\nEscolha a forma de pagamento ([1] - à vista ou [2] - parcelado): \").lower()\n",
        "\n",
        "    if opcao_pagamento == \"1\":\n",
        "        num_parcelas = 1\n",
        "        taxa_juros = 0\n",
        "    elif opcao_pagamento == \"2\":\n",
        "        # Entrada de dados para parcelamento\n",
        "        num_parcelas = int(input(\"\\nDigite o número de parcelas desejado (até 96x): \"))\n",
        "\n",
        "        if num_parcelas <= 10:\n",
        "            taxa_juros = 0\n",
        "        elif num_parcelas <= 24:\n",
        "            taxa_juros = 1.45\n",
        "        else:\n",
        "            taxa_juros = 1.59\n",
        "except ValueError:\n",
        "    print(\"Opção inválida. Por favor, escolha [1] para à vista ou [2] para parcelado.\")\n",
        "\n",
        "\n",
        "valor_parcela = calcular_valor_parcela(valor_projeto, num_parcelas, taxa_juros)\n",
        "\n",
        "# Cálculo de economia mensal e tempo de retorno do investimento\n",
        "economia_mensal = valor_atual_consumo_mensal - valor_parcela\n",
        "\n",
        "# Valor gasto sem o sistema fotovoltaico\n",
        "valor_gasto_sem_sistema = valor_atual_consumo_mensal * 300\n",
        "\n",
        "# Cálculo do valor total que o cliente pagará em 25 anos\n",
        "valor_total_cliente = valor_parcela * num_parcelas * (1 + taxa_juros / 100)\n",
        "\n",
        "# Economia total após quitar o investimento\n",
        "economia_total_apos_quitar = valor_gasto_sem_sistema - valor_total_cliente\n",
        "\n",
        "# Custo mensal atual\n",
        "print(f\"\\nSem o sistema, você pagaria por mês: R$ {custo_mensal:.2f}\")\n",
        "print(f\"Isso daria cerca de R$ {valor_gasto_sem_sistema:.2f} em 25 anos.\\n\")\n",
        "\n",
        "# Valor da parcela mensal\n",
        "print(f\"Feche conosco agora mesmo e você vai pagar por mês apenas: R$ {valor_parcela:.2f}\")\n",
        "print(f\"Uma economia mensal estimada em: R$ {economia_mensal:.2f}\\n\")\n",
        "\n",
        "# Valor total que o cliente vai pagar (investimento + juros)\n",
        "print(f\"Valor total que você vai pagar: R$ {valor_total_cliente:.2f}\\n(Referente ao valor total do Projeto, instalação e juros ao banco)\")\n",
        "print(f\"\\nEconomia total estimada em 25 anos: R$ {economia_total_apos_quitar:.2f}\\n\")\n",
        "\n",
        "# Copyright\n",
        "print(f\"\\n© {empresa}, {ano}. Todos os direitos reservados.\\nAutores: {autores}\")"
      ],
      "metadata": {
        "id": "yMs_Nq7fisCu",
        "outputId": "ef7fde86-f7fb-49d1-c6d3-855adf675def",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 459
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Bem-vindo à Fênix Engenharia e Serviços!\n",
            "Esse é o nosso simulador de economia para sistemas fotovoltaicos.\n",
            "Por: Cleiton Borghi e Ariel Reises.\n",
            "\n"
          ]
        },
        {
          "output_type": "error",
          "ename": "KeyboardInterrupt",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-21-867a469c6dc6>\u001b[0m in \u001b[0;36m<cell line: 13>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     12\u001b[0m \u001b[0;31m# Entrada de dados do usuário\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     13\u001b[0m \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 14\u001b[0;31m     \u001b[0mconsumo_mensal\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0minput\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Digite o consumo mensal aproximado (em kW): \"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     15\u001b[0m     \u001b[0mcusto_mensal\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mfloat\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0minput\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Digite o custo mensal aproximado: R$ \"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     16\u001b[0m \u001b[0;32mexcept\u001b[0m \u001b[0mValueError\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/ipykernel/kernelbase.py\u001b[0m in \u001b[0;36mraw_input\u001b[0;34m(self, prompt)\u001b[0m\n\u001b[1;32m    849\u001b[0m                 \u001b[0;34m\"raw_input was called, but this frontend does not support input requests.\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    850\u001b[0m             )\n\u001b[0;32m--> 851\u001b[0;31m         return self._input_request(str(prompt),\n\u001b[0m\u001b[1;32m    852\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_parent_ident\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    853\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_parent_header\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/ipykernel/kernelbase.py\u001b[0m in \u001b[0;36m_input_request\u001b[0;34m(self, prompt, ident, parent, password)\u001b[0m\n\u001b[1;32m    893\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mKeyboardInterrupt\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    894\u001b[0m                 \u001b[0;31m# re-raise KeyboardInterrupt, to truncate traceback\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 895\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0mKeyboardInterrupt\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Interrupted by user\"\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    896\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    897\u001b[0m                 \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlog\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwarning\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Invalid Message:\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mexc_info\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mKeyboardInterrupt\u001b[0m: Interrupted by user"
          ]
        }
      ]
    }
  ]
}